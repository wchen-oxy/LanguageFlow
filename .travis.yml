language: android
dist: trusty
env:
  global:
  - ANDROID_API_LEVEL=28
  - ANDROID_BUILD_TOOLS_VERSION=28.0.3
  - ANDROID_SDK_ROOT=/usr/local/android-sdk  
  - ANDROID_SDK_HOME=/usr/local/android-sdk
  - IMAGE_PATH=default/x86
  - NEW_IMAGE_PATH=${IMAGE_PATH%/}
before_install:
    - ls 
    - cd Android
android:
    components:
        # Uncomment the lines below if you want to
        # use the latest revision of Android SDK Tools
        - tools
        - platform-tools

        # The BuildTools version used by your project
        - build-tools-$ANDROID_BUILD_TOOLS_VERSION 

        # The SDK version used to compile your project
        - android-$ANDROID_API_LEVEL

        # # Additional components
        # - extra-google-google_play_services
        # - extra-google-m2repository
        # - extra-android-m2repository

        # # Specify at least one system image,
        # # if you need to run emulator(s) during your tests
        - sys-img-x86-android-28
        - extra
# before_cache:
#     - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
#     - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
# cache:
#   directories:
#     - $HOME/.gradle/caches/
#     - $HOME/.gradle/wrapper/
#     - $HOME/.android/build-cache
before_script:
    # - ls /usr/local/android-sdk
    - echo $NEW_IMAGE_PATH
    - android list sdk --extended --no-ui --all
    - android list targets
    - echo no | android create avd --name myandroid28 -t android-28 --abi %NEW_IMAGE_PATH
    # - sdkmanager --list
    # - printf "%s\n" $PATH
    - emulator -list-avds
    - emulator -avd myandroid28 -debug init
    # - emulator -avd myandroid28 -no-audio -no-window &
    # - android-wait-for-emulator
    # - adb shell input keyevent 82 &
    # licenses:
    #     - 'android-sdk-preview-license-52d11cd2'
    #     - 'android-sdk-license-.+'
    #     - 'google-gdk-license-.+'

